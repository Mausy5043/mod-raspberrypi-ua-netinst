#! /bin/busybox sh
# post-install.txt
# finish set-up of basic server


#####################
#### PREPARATION ####
#####################

# This is where we setup variables and stuff that we need later in the script

USER=$username
USRHOME="home/"$USER
RMTPATH=$hostname/$USRHOME


######################
#### SYSTEM SETUP ####
######################

# Here we setup the generic system. Stuff that's needed to get a basic RPI up
# and running stable.

echo "Preparing /etc/hosts file..."
echo ""
echo "# Added by post-install:"
echo "::1             localhost ip6-localhost ip6-loopback" >> /rootfs/etc/hosts
echo "fe00::0         ip6-localnet"     >> /rootfs/etc/hosts
echo "ff00::0         ip6-mcastprefix"  >> /rootfs/etc/hosts
echo "ff02::1         ip6-allnodes"     >> /rootfs/etc/hosts
echo "ff02::2         ip6-allrouters"   >> /rootfs/etc/hosts

echo "Creating extra mountpoints..."
mkdir -p /rootfs/mnt/share1
mkdir -p /rootfs/mnt/backup
mkdir -p /rootfs/home/pi/bin

echo "" >> /rootfs/etc/fstab
echo "# Added by post-install:" >> /rootfs/etc/fstab
# echo "tmpfs /var/log tmpfs defaults,noatime,nosuid,mode=0755,size=96M  0 0" >> /rootfs/etc/fstab
echo "boson.lan:/srv/array1/backup    /mnt/backup nfs4 nouser,atime,rw,dev,exec,suid,noauto 0   0" >> /rootfs/etc/fstab
echo "boson.lan:/srv/array1/rbin/rpi  /home/pi/bin nfs4 nouser,atime,rw,dev,exec,suid,auto  0   0" >> /rootfs/etc/fstab

# get more memory
echo -n "[/boot/config.txt] "
# Scaled CPU frequency
echo ""                   >> /rootfs/boot/config.txt
echo "# Added by post-install" >> /rootfs/boot/config.txt
echo "arm_freq=950"       >> /rootfs/boot/config.txt
echo "core_freq=450"      >> /rootfs/boot/config.txt
echo "sdram_freq=450"     >> /rootfs/boot/config.txt
echo "over_voltage=6"     >> /rootfs/boot/config.txt
echo ""                   >> /rootfs/boot/config.txt
echo "arm_freq_min=500"   >> /rootfs/boot/config.txt
echo "core_freq_min=250"  >> /rootfs/boot/config.txt
echo "sdram_freq_min=400" >> /rootfs/boot/config.txt
echo "over_voltage_min=0" >> /rootfs/boot/config.txt
echo ""                   >> /rootfs/boot/config.txt
echo "force_turbo=0"      >> /rootfs/boot/config.txt

echo "."


####################
#### USER SETUP ####
####################

# Here we setup the generic user `pi` and the luser environment.

# SSH
if [ ! -d /rootfs/$USRHOME/.ssh ]; then
  echo "Create ~/.ssh folder..."
  mkdir -m 0700 -p /rootfs/$USRHOME/.ssh
fi

# GIT
echo "Set-up raspboot..."
mkdir -p /rootfs/$USRHOME/raspboot
echo "  Pull sources from github..."
chroot /rootfs /usr/bin/git clone -b master https://github.com/Mausy5043/raspboot.git /$USRHOME/raspboot
echo "master" > /rootfs/$USRHOME/.raspboot.branch
echo "  Set permissions..."
chmod -R 0755 /rootfs/$USRHOME/raspboot

# echo "Change ownership of files in $USRHOME..."
# chroot /rootfs /bin/chown -R $USER:$USER /$USRHOME


######################
#### SERVER SETUP ####
######################

# This is where specifics for the server are setup
# Install CPU governor
chroot /rootfs /usr/sbin/update-rc.d switch_cpu_governor defaults


####################
#### FINALISING ####
####################

echo -n "********** SYSTEM READY **********"

date
# put the logfile somewhere we can find it, so we can mount /var/log with tmpfs
sync; sync
LOGTARGET=$USRHOME/installer.log
cp $LOGFILE /rootfs/$LOGTARGET
chmod 0644  /rootfs/$LOGTARGET
chroot /rootfs /bin/chown $USER:$USER /$LOGTARGET
